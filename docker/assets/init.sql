CREATE TABLE TASKS_LISTS
(
    ID    VARCHAR(255) NOT NULL PRIMARY KEY,
    NAME  VARCHAR(255) NOT NULL UNIQUE,
    COLOR VARCHAR(255) NOT NULL
);

CREATE TABLE TAGS
(
    ID    VARCHAR(255) NOT NULL PRIMARY KEY,
    NAME  VARCHAR(255) NOT NULL UNIQUE,
    COLOR VARCHAR(255) NOT NULL
);

CREATE TABLE TASKS
(
    ID          VARCHAR(255)  NOT NULL PRIMARY KEY,
    TITLE       VARCHAR(255)  NOT NULL,
    DESCRIPTION VARCHAR(4096) NULL,
    LIST_ID     VARCHAR(255)  NULL,
    DUE_DATE    DATE          NOT NULL,
    FINISHED    BOOLEAN       NOT NULL DEFAULT FALSE,
    FOREIGN KEY (LIST_ID) REFERENCES TASKS_LISTS (ID)
);

CREATE TABLE TASKS_TAGS
(
    TASK_ID VARCHAR(255) NOT NULL,
    TAG_ID  VARCHAR(255) NOT NULL,
    PRIMARY KEY (TASK_ID, TAG_ID),
    FOREIGN KEY (TASK_ID) REFERENCES TASKS (ID),
    FOREIGN KEY (TAG_ID) REFERENCES TAGS (ID)
);

CREATE OR REPLACE VIEW TASKS_VIEW AS
SELECT task.id,
       task.TITLE,
       task.DESCRIPTION,
       task.DUE_DATE,
       task.FINISHED,
       tasksLists.ID                                                       AS listId,
       ARRAY(SELECT tt.TAG_ID FROM TASKS_TAGS tt WHERE tt.TASK_ID = task.ID) AS tags
FROM TASKS task
         LEFT JOIN TASKS_LISTS tasksLists ON task.LIST_ID = tasksLists.ID;
